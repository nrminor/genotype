name: CI
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  BUN_VERSION: latest
  RUST_TOOLCHAIN: stable

jobs:
  lint:
    name: Lint & Format Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}
      
      - name: Install dependencies
        run: bun install
      
      - name: TypeScript compilation check
        run: bun run lint
      
      - name: Format check
        run: bun run format:check
      
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: clippy, rustfmt
      
      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "src/native"
      
      - name: Check Rust formatting
        run: cargo fmt --manifest-path src/native/Cargo.toml -- --check
      
      - name: Run Rust linting
        run: cargo clippy --manifest-path src/native/Cargo.toml -- -D warnings

  test:
    name: Test
    needs: lint
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        bun-version: [latest]
        include:
          # Test additional Bun versions on Ubuntu only to avoid job explosion
          - os: ubuntu-latest
            bun-version: '1.0.0'
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ matrix.bun-version }}
      
      - name: Install dependencies
        run: bun install
      
      - name: Run TypeScript tests
        run: bun test

  test-rust:
    name: Test Rust Native
    needs: lint
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
      
      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "src/native"
      
      - name: Run Rust tests
        run: cargo test --manifest-path src/native/Cargo.toml

  integration-test:
    name: Integration Tests
    needs: [test, test-rust]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}
      
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
      
      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "src/native"
      
      - name: Install dependencies
        run: bun install
      
      # Comment out native build for now since native module isn't ready
      # - name: Build native module
      #   run: bun run build:native
      
      - name: Run full validation suite
        run: bun run validate
      
      # Uncomment when we have integration tests
      # - name: Test with real genomics data
      #   run: bun test test/integration/